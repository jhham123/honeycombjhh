@import '~compass-mixins/lib/compass/css3';

$randomNumber: random(5)

:root {
  --main-bg-color: white;
}

.one {
  background-color: white;
}

p, li {
  font-size: 1.5rem;
}
.App {
  text-align: center;
}

html,
body {
  background-color: black !important;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

span {
  color: white;
  font-size: 100% !important;
}

.button {
  background: #fee;
  border-radius: 1em;
  display: inline-block;
  padding: 1em;
  transform: scale(.9);
  transform-origin: 0 0;
  transition: transform .6s;
  user-select: none;
}

.jspsych-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#jspsych-html-slider-response-wrapper {
  width: 70vw;
}

.grid_container {
  box-sizing: border-box;
  display: grid;
  grid-template-columns: 11vw 26vw 26vw 26vw 11vw;
  grid-template-rows: 11vh 26vh 26vh 26vh 11vh;

}

.fixation-plus {
  background-color:white;
  width: 2vw;
  height: 2vw;
  border-radius:50%;

  justify-self: center;
  align-self: center;

  grid-column-start: 3;
  grid-column-end: 3;

  grid-row-start: 3;
  grid-row-end: 3;
}

.box {
  background-color:white;
  width: 18vw;
  height: 18vw;
  display: flex;
  align-items: center;
  align-self: center;
  text-align: center;
  justify-content: center;
  font-size: 40px;
}

.left {
  grid-column-start: 2;
  grid-column-end: 2;

  grid-row-start: 3;
  grid-row-end: 3;

}

.right-top {
  grid-column-start: 4;
  grid-column-end: 4;

  grid-row-start: 2;
  grid-row-end: 2;

}

.right-bot {
  grid-column-start: 4;
  grid-column-end: 4;

  grid-row-start: 4;
  grid-row-end: 4;

}

.large-white-text{
  background-color:black;
  color: white;
  font-size: 30px;
  padding: 200px;
  margin-top: 100px;
}

.happiness-text-slider{
  background-color:black;
  color: white;
  font-size: 30px;
  padding: 200px;
}

.survey-item{
  color: white;
  font-size: 25px;
  margin-right: 30px;
  margin-left: 10px;
}

.jspsych-btn {
  padding: 0.5rem 1rem;
  font-weight: bold;
  border-radius: 5px;
  box-shadow: 5px 5px 5px #efefef;
  background-color: #d3d3d3;
  margin: 1rem;
  width: 10rem !important;
}
.wheel {
  width: 100px;
  height: 100px;
  animation-name: spin;
  animation-duration: 5000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.container {
	position: relative;
	max-width: 800px;
	margin: 2rem auto;
}

$diameter: 550px;
$numberOfSlices: 7;
$radius: ($diameter / 2);
$circumfrence: (6.283185307 * $radius);
$sliceHeight: ($circumfrence / $numberOfSlices);
$sliceOffset: ($sliceHeight / 2);
$sliceColor: #4F7942;
$rotation: 360deg / ($numberOfSlices + 1);
$sliceColor2: #ED7117;

:export {
    diameter: $diameter;
}

.spinner-table {
	height: ($diameter - 2px);
	width: ($diameter - 2px);
	position: relative;
	border-radius: 100%;
	overflow: hidden;
}

.dial {
	height: 100%;
	transition: all 5s ease-out;
	animation-fill-mode: forwards;
	animation-timing-function: linear;

	&.spinning {
    animation-delay: 0s;
    animation-duration: 1s;
		animation-timing-function: linear;
		animation-name: spinning;
    animation-iteration-count: infinite;
	}

  &.stopping1 {
    animation-delay: 0s;
    animation-duration: 4s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping1;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping8 {
    animation-delay: 0s;
    animation-duration: 4s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping8;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping7 {
    animation-delay: 0s;
    animation-duration: 4s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping7;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping6 {
    animation-delay: 0s;
    animation-duration: 5s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping6;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping5 {
    animation-delay: 0s;
    animation-duration: 5s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping5;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping4 {
    animation-delay: 0s;
    animation-duration: 5s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping4;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping3 {
		animation-delay: 0s;
		animation-duration: 6s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping3;
		animation-fill-mode: forwards;
		animation-iteration-count: 1;

	}
	&.stopping2 {
    animation-delay: 0s;
    animation-duration: 6s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping2;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&:before {
		content: '';
		text-align: center;
		display: block;
		line-height: 60px;
		position: absolute;
		height: 40px;
		width: 40px;
		background: white;
		box-shadow: 0 0 5px 5px rgba(#000, .1);
		top: 50%;
		left: 50%;
		margin-top: -20px;
		margin-left: -20px;
		border-radius: 100%;
		z-index: 200;
	}

	.slice {
		z-index: 150;
		position: absolute;
		top: calc(50% - #{$sliceOffset});
		height: $sliceHeight;
		left: 50%;
		width: 50%;
		color: white;
		text-align: right;
		padding-right: 0px;
		display: block;
		transform-origin: left center;

		&:before,
		&:after {
			content: "";
			display: block;
			width: 0;
			height: 0;
			border-style: solid;
		}

		&:before {
			margin-bottom: -1px;
			margin-top: -2px;
			border-width: 0 0 (($sliceHeight / 2) + 4px) $radius;
			border-color: transparent transparent $sliceColor transparent;
		}

		&:after {
			margin-top: -1px;
			margin-bottom: -2px;
			border-width: 0 $radius (($sliceHeight / 2) + 4px) 0;
			border-color: transparent $sliceColor transparent transparent;
		}

		&:nth-child(odd) {

			&:after { border-color: transparent #F44336 transparent transparent; }
			&:before { border-color: transparent transparent #F44336 transparent; }
		}

    &:nth-child(even) {

			&:after { border-color: transparent darken($sliceColor, 0%) transparent transparent; }
			&:before { border-color: transparent transparent darken($sliceColor, 0%) transparent; }
		}

		.label {
			position: absolute;
			top: 0;
			bottom: 0;
			width: 70%;
			line-height: $sliceHeight;
			padding-top: 1px;
			padding-bottom: 1px;
			font-size: 36px;
			text-align: right;
			padding-left: 20px;
		}

		&:nth-child(1) {
			transform: rotate(0deg);
    }
		&:nth-child(2) {
			transform: rotate(45deg);
		}
		&:nth-child(3) {
			transform: rotate(90deg);
		}
		&:nth-child(4) {
			transform: rotate(135deg);
		}
		&:nth-child(5) {
			transform: rotate(180deg);
		}
		&:nth-child(6) {
			transform: rotate(225deg);
		}
		&:nth-child(7) {
			transform: rotate(270deg);
		}
		&:nth-child(8) {
			transform: rotate(315deg);
		}
	}
}

.dialp {
	height: 100%;
	transition: all 5s ease-out;
	animation-fill-mode: forwards;
	animation-timing-function: linear;

	&.spinning {
    animation-delay: 0s;
    animation-duration: 1s;
		animation-timing-function: linear;
		animation-name: spinning;
    animation-iteration-count: infinite;
	}

	&.stopping1 {
    animation-delay: 0s;
    animation-duration: 4s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping1;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping2 {
    animation-delay: 0s;
    animation-duration: 4s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping2;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping3 {
    animation-delay: 0s;
    animation-duration: 4s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping3;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping4 {
    animation-delay: 0s;
    animation-duration: 5s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping4;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping5 {
    animation-delay: 0s;
    animation-duration: 5s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping5;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping6 {
    animation-delay: 0s;
    animation-duration: 5s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping6;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&.stopping7 {
		animation-delay: 0s;
		animation-duration: 6s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping7;
		animation-fill-mode: forwards;
		animation-iteration-count: 1;

	}
	&.stopping8 {
    animation-delay: 0s;
    animation-duration: 6s;
		animation-timing-function: cubic-bezier(.48,1.09,1,1);
		animation-name: stopping8;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;

	}
	&:before {
		content: '';
		text-align: center;
		display: block;
		line-height: 60px;
		position: absolute;
		height: 40px;
		width: 40px;
		background: white;
		box-shadow: 0 0 5px 5px rgba(#000, .1);
		top: 50%;
		left: 50%;
		margin-top: -20px;
		margin-left: -20px;
		border-radius: 100%;
		z-index: 200;
	}

	.slice {
		z-index: 150;
		position: absolute;
		top: calc(50% - #{$sliceOffset});
		height: $sliceHeight;
		left: 50%;
		width: 50%;
		color: white;
		text-align: right;
		padding-right: 0px;
		display: block;
		transform-origin: left center;

		&:before,
		&:after {
			content: "";
			display: block;
			width: 0;
			height: 0;
			border-style: solid;
		}

		&:before {
			margin-bottom: -1px;
			margin-top: -2px;
			border-width: 0 0 (($sliceHeight / 2) + 4px) $radius;
			border-color: transparent transparent $sliceColor2 transparent;
		}

		&:after {
			margin-top: -1px;
			margin-bottom: -2px;
			border-width: 0 $radius (($sliceHeight / 2) + 4px) 0;
			border-color: transparent $sliceColor2 transparent transparent;
		}

		&:nth-child(odd) {

			&:after { border-color: transparent #A020F0 transparent transparent; }
			&:before { border-color: transparent transparent #A020F0 transparent; }
		}

    &:nth-child(even) {

			&:after { border-color: transparent darken($sliceColor2, 0%) transparent transparent; }
			&:before { border-color: transparent transparent darken($sliceColor2, 0%) transparent; }
		}

		.label {
			position: absolute;
			top: 0;
			bottom: 0;
			width: 70%;
			line-height: $sliceHeight;
			padding-top: 1px;
			padding-bottom: 1px;
			font-size: 36px;
			text-align: right;
			padding-left: 20px;
		}

		&:nth-child(1) {
			transform: rotate(0deg);
    }
		&:nth-child(2) {
			transform: rotate(45deg);
		}
		&:nth-child(3) {
			transform: rotate(90deg);
		}
		&:nth-child(4) {
			transform: rotate(135deg);
		}
		&:nth-child(5) {
			transform: rotate(180deg);
		}
		&:nth-child(6) {
			transform: rotate(225deg);
		}
		&:nth-child(7) {
			transform: rotate(270deg);
		}
		&:nth-child(8) {
			transform: rotate(315deg);
		}
	}
}

@keyframes spinning {
	 from { transform: rotate(0); }
   to {  transform: rotate(360deg); }
}
@keyframes stopping1 {
	 from { transform: rotate(0); }
   to {  transform: rotate(735deg); }
}
@keyframes stopping8{
	 from { transform: rotate(0); }
   to {  transform: rotate(780deg); }
}
@keyframes stopping7 {
	 from { transform: rotate(0); }
   to {  transform: rotate(825deg); }
}
@keyframes stopping6 {
	 from { transform: rotate(0); }
   to {  transform: rotate(870deg); }
}
@keyframes stopping5 {
	 from { transform: rotate(0); }
   to {  transform: rotate(915deg); }
}
@keyframes stopping4 {
	 from { transform: rotate(0); }
   to {  transform: rotate(960deg); }
}
@keyframes stopping3 {
	 from { transform: rotate(0); }
   to {  transform: rotate(1005deg); }
}
@keyframes stopping2 {
	 from { transform: rotate(0); }
   to {  transform: rotate(1050deg); }
}
@keyframes stopped {
	 from { transform: rotate(0); }
   to {  transform: rotate(0); }
}

.arrow {
	position: absolute;
	height: 30px;
	width: 50px;
	left: ($diameter + 30px);
	z-index: 500;
	display: block;
	top: 50%;
	margin-top: -15px;
	transform-origin: center right;
}

.pointer {
	z-index: 500;
	display: block;
	height: 30px;
	width: 50px;

	&:before {
		content: '';
		display: block;
		position: absolute;
		right: 0;
		top: 0;
		width: 0;
		height: 0;
		border-style: solid;
		border-width: 0 0 15px 50px;
		border-color: transparent red #c27028 transparent;
	}
	&:after {
		content: '';
		display: block;
		position: absolute;
		right: 0;
		bottom: 0;
		width: 0;
		height: 0;
		border-style: solid;
		border-width: 0 50px 15px 0;
		border-color: transparent #c27028 transparent transparent;
	}
}

.mask {
	position: absolute;
	z-index: 1000;
	top: 48%;
	left: -9%;
	transform: rotate(200deg) scale(1.01);
	height: 275px;
	width: 550px;
	border-radius: 420px 420px 0 0;
	background-color: grey;
	display: block;
}

.mask2 {
	position: absolute;
	z-index: 10000;
	top: 2%;
	left: 8%;
	transform: rotate(20deg) scale(1.01);
	height: 275px;
	width: 550px;
	border-radius: 420px 420px 0 0;
	background-color: grey;
	display: block;
}

.board {
	position: relative;
	background: white;
	padding: 50px;
}

* {
  box-sizing: border-box;
}

#wrapper {
  width: 400px;
  margin: 200px auto;
	transform: scale(2)
}

.envelope {
  width: 200px;
  height: 100px;
  margin: 130px auto 0;
  background: #ddd;
  box-shadow:
    0 0 1px rgba(0,0,0,0.5),
    0 1px 3px rgba(0,0,0,0.25);
  position: relative;
  perspective: 800px;
}
.envelope:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  border: 0 solid rgba(0,0,0,0.25);
  border-width: 45px 100px;
  border-top-color: transparent;
  z-index: 2;
}

.envelope .flap {
  position: absolute;
  width: 100%;
  height: 0;
  border: 0 solid transparent;
  border-width: 50px 100px;
  z-index: 3;
}
.envelope .flap.front {
  border-left-color: #eee;
  border-right-color: #eee;
  border-bottom-color: #ccc;
  z-index: 3;
}
.envelope .flap.front:after {
  content: '';
  width: 100%;
  height: 0;
  position: absolute;
  left: -100px;
  bottom: -50px;
  border: 0 solid transparent;
  border-width: 49px 100px;
  border-bottom-color: #eee;
}

.envelope .flap.top {
  border-top-width: 55px;
  border-top-color: #aaa;
  z-index: 3;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  -webkit-transform-origin-y: top;
  transform-origin-y: top;
  perspective: 800;
  transform-style: preserve-3d;
}
.envelope.open .flap.top {
  animation-name: flip;
}
.envelope .flap.top:after {
  content: '';
  position: absolute;
  left: -100px; /* border-left-width */
  top: -55px; /* border-top-width */
  width: 100%;
  height: 0;
  border: 0 solid transparent;
  border-width: 54px 100px;
  border-top-color: #eee;
}

.envelope .letter {
  position: absolute;
  width: 194px;
  height: 84px;
  background: #fff;
  top: 8px;
  left: 3px;
  border: 1px solid #ccc;
  z-index: 1;
  animation-duration: 2s;
  animation-delay: 1.5s;
  animation-fill-mode: forwards;
  transform-style: preserve-3d;
}
.envelope.open .letter {
  animation-name: remove;
}
.envelope .letter:before,
.envelope .letter:after {
  content: '';
  position: absolute;
  width: 192px;
  height: 75%;
  left: -1px;
  background: #fff;
  border: 1px solid #ccc;
  animation-duration: 1s;
  animation-delay: 4s;
  animation-fill-mode: forwards;
  -webkit-transform-origin-y: top;
  transform-origin-y: top;
  transform-style: preserve-3d;
  transform: rotateX(10deg);
}
.envelope .letter:before {
  z-index: 1;
}
.envelope.open .letter:before {
  animation-name: fold-up;
}
.envelope .letter:after {
  animation-delay: 5s;
  animation-fill-mode: forwards;
  -webkit-transform-origin-y: bottom;
  transform-origin-y: bottom;
  transform: rotateX(-5deg);
  bottom: 0;
}
.envelope.open .letter:after {
  animation-name: fold-down;
}

@keyframes flip {
  100% {
    transform: rotateX(180deg);
    z-index: 1;
  }
}

@keyframes remove {
  50% {
    top: -120px;
  }
  100% {
    top: 8px;
    z-index: 3;
  }
}

@keyframes fold-up {
  from {
  }
  to {
    transform: rotateX(140deg);
  }
}

@keyframes fold-down {
  from {
  }
  to {
    transform: rotateX(-140deg);
  }
}

#reset {
  background: #eee;
  display: inline-block;
  margin-top: -100px;
  text-align: center;
  padding: 10px 20px;
  border: 1px solid #ddd;
  border-radius: 25px;
  background: linear-gradient(#eee, #ccc);
  color: #333;
  text-shadow: 0 1px 0 #fff;
  cursor: pointer;
  float: right;
}
#reset:hover {
  opacity: 0.8;
}
#reset:active {
  background: linear-gradient(#ccc, #eee);
}

.wrapper {
  position: relative;
  margin: 40px auto;
  background: white;
}

@mixin timer($item, $duration, $size, $color, $border, $hover: running) {
  #{$item}, #{$item} * { @include box-sizing(border-box); }

  #{$item} {
    width: $size;
    height: $size;
  }

  #{$item} .pie {
    width: 50%;
    height: 100%;
    transform-origin: 100% 50%;
    position: absolute;
    background: $color;
    border: #{$border};
  }

  #{$item} .spinner {
    border-radius: 100% 0 0 100% / 50% 0 0 50%;
    z-index: 200;
    border-right: none;
    animation: rota $duration + s linear infinite;
  }

  #{$item}:hover .spinner,
  #{$item}:hover .filler,
  #{$item}:hover .mask3 {
    animation-play-state: $hover;
  }

  #{$item} .filler {
    border-radius: 0 100% 100% 0 / 0 50% 50% 0;
    left: 50%;
    opacity: 0;
    z-index: 100;
    animation: opa $duration + s steps(1,end) infinite reverse;
    border-left: none;
		animation-name: filler;
  }

  #{$item} .mask3 {
    width: 50%;
    height: 100%;
    position: absolute;
    background: inherit;
    opacity: 1;
    z-index: 300;
    animation: opa $duration + s steps(1,end) infinite;
		animation-name: mask3;
  }

  @keyframes rota {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes opa {
    0% { opacity: 1; }
    50%, 100% { opacity: 0; }
  }
}

@include timer('.wrapper', 5, 250px, #08C, '5px solid rgba(0,0,0,0.5)');
